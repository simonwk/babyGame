import java.util.Random;
import java.util.Scanner;

public class Methods {

	String[][] gameBoard = new String[10][10];
	Random rand = new Random();
	Scanner scan = new Scanner(System.in);
	int xPosWall, yPosWall, move, xPosBaby, yPosBaby;
	String response;
	
	public void createGameBoard() {
		for(int row = 0; row < 10; row++) {
			for(int col = 0; col < 10; col++) {
				gameBoard[row][col] = "[ ]";
			}
		}
	}
	
	public void updateGameBoard() {
		for(int row = 0; row < 10; row++) {
			for(int col = 0; col < 10; col++) {
				System.out.print(gameBoard[row][col]); 
			}
			System.out.println();
		}
	}
	
	public void setInitialPositionBaby() {
		gameBoard[yPosBaby = rand.nextInt(2) + 4][xPosBaby = rand.nextInt(2) + 4] = "[B]";
	}
	
	public void placeWall() {
		System.out.println("Wall: x,y");
		response = scan.nextLine();
		xPosWall = Character.getNumericValue(response.charAt(0));
		yPosWall = Character.getNumericValue(response.charAt(2));
		
		gameBoard[yPosWall][xPosWall] = "[-]";
		
		updateGameBoard();
	}
	
	public void moveBaby() {
		move = rand.nextInt(8);
		switch(move) {
		case 0: {
			gameBoard[yPosBaby][xPosBaby] = "[ ]";
			gameBoard[yPosBaby -= 1][xPosBaby] = "[B]";
		}
		case 1: {
			gameBoard[yPosBaby][xPosBaby] = "[ ]";
			gameBoard[yPosBaby -= 1][xPosBaby += 1] = "[B]";
		}
		case 2: {
			gameBoard[yPosBaby][xPosBaby] = "[ ]";
			gameBoard[yPosBaby][xPosBaby += 1] = "[B]";
		}
		case 3: {
			gameBoard[yPosBaby][xPosBaby] = "[ ]";
			gameBoard[yPosBaby += 1][xPosBaby += 1] = "[B]";
		}
		case 4: {
			gameBoard[yPosBaby][xPosBaby] = "[ ]";
			gameBoard[yPosBaby += 1][xPosBaby] = "[B]";
		}
		case 5: {
			gameBoard[yPosBaby][xPosBaby] = "[ ]";
			gameBoard[yPosBaby += 1][xPosBaby -= 1] = "[B]";
		}
		case 6: {
			gameBoard[yPosBaby][xPosBaby] = "[ ]";
			gameBoard[yPosBaby][xPosBaby -= 1] = "[B]";
		}
		case 7: {
			gameBoard[yPosBaby][xPosBaby] = "[ ]";
			gameBoard[yPosBaby -= 1][xPosBaby -= 1] = "[B]";
		}
		}
	}

	public boolean checkPosBaby() {
		for (int i = 0; i < 10; i++) {
			if ((yPosBaby == 0 && xPosBaby == i) || (yPosBaby == 9 && xPosBaby == i) || ((xPosBaby == 0 || xPosBaby == 9) && (yPosBaby == i))) {
				return false;
			}	
		}
		return true;
	}
}
	
